package socialserviceserver

import (
	"database/sql"
	ssc "socialservice/client"
	"sort"
	"strings"
	"testing"
	"time"

	_ "github.com/go-sql-driver/mysql"
)

func TestIntegrated(t *testing.T) {
	// Arrange
	type testcase struct {
		testName string
		testlist []string
		wantlist [][]string
	}
	testlist := []testcase{
		{
			"Test1",
			[]string{
				"register t1_user1_test 111",
				"register t1_user2_test 222",
				"register t1_user2_test 222",
				"register t1_user3_test 333",
				"login",
				"login t1_user1_test 111",
				"login t1_user1_test 123",
				"login 12e t1_test",
				"login t1_user2_test 222",
				"login t1_user3_test 333",
				"logout t1_user4_test",
				"logout t1_user1_test",
				"delete t1_user1_test",
				"login t1_user1_test 111",
				"invite t1_user1_test t1_user2_test",
				"invite t1_user1_test t1_user3_test",
				"list-invite t1_user2_test",
				"list-invite t1_user3_test",
				"accept-invite t1_user2_test t1_user1_test",
				"accept-invite t1_user2_test t1_user3_test",
				"accept-invite t1_user3_test t1_user1_test",
				"list-friend t1_user1_test",
				"list-friend t1_user4_test",
				"post t1_user1_test hello",
				"receive-post t1_user2_test",
				"delete t1_user1_test",
				"delete t1_user2_test",
				"delete t1_user3_test",
				"delete t1_user4_test",
			},
			[][]string{
				{"Success!"},
				{"Success!"},
				{"t1_user2_test is already used"},
				{"Success!"},
				{"Usage: login <id> <password>"},
				{"Success!"},
				{"No such user or password error"},
				{"No such user or password error"},
				{"Success!"},
				{"Success!"},
				{"Not login yet"},
				{"Bye!"},
				{"Not login yet"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"t1_user1_test"},
				{"t1_user1_test"},
				{"Success!"},
				{"t1_user3_test did not invite you"},
				{"Success!"},
				{"t1_user2_test", "t1_user3_test"},
				{"Not login yet"},
				{"Success!"},
				{"t1_user1_test: hello"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Not login yet"},
			},
		},
		{
			"Test2",
			[]string{
				"register t2_user1_test",
				"register t2_user1_test zzz zzz",
				"register",
				"login t2_user1_test 111",
				"login t2_user2_test 222",
				"delete t2_user3_test",
				"login t2_user3_test 333",
				"accept-invite t2_user1_test t2_user2_test",
				"invite t2_user1_test t2_user2_test",
				"invite t2_user1_test t2_user1_test",
				"invite t2_user1_test t2_user4_test",
				"register t2_user4_test 444",
				"login t2_user4_test 444",
				"invite t2_user1_test t2_user4_test",
				"list-invite t2_user4_test",
				"accept-invite t2_user4_test t2_user1_test",
				"list-friend t2_user1_test",
				"delete t2_user1_test",
				"delete t2_user2_test",
				"delete t2_user3_test",
				"delete t2_user4_test",
			},
			[][]string{
				{"Usage: register <id> <password>"},
				{"Usage: register <id> <password>"},
				{"Usage: register <id> <password>"},
				{"No such user or password error"},
				{"No such user or password error"},
				{"Not login yet"},
				{"No such user or password error"},
				{"Not login yet"},
				{"Not login yet"},
				{"Not login yet"},
				{"Not login yet"},
				{"Success!"},
				{"Success!"},
				{"Not login yet"},
				{"No invitations"},
				{"t2_user1_test did not invite you"},
				{"Not login yet"},
				{"Not login yet"},
				{"Not login yet"},
				{"Not login yet"},
				{"Success!"},
			},
		},
		{
			"Test3",
			[]string{
				"register t3_userA_test 111",
				"register t3_userB_test 222",
				"register t3_userC_test 333",
				"login t3_userA_test 123",
				"login t3_userA_test 111",
				"login t3_userD_test 444",
				"delete t3_userB_test",
				"login t3_userB_test 222",
				"login t3_userC_test 333",
				"invite t3_userA_test t3_userB_test",
				"invite t3_userA_test t3_userA_test",
				"invite t3_userA_test t3_userB_test",
				"invite t3_userB_test t3_userA_test",
				"invite t3_userA_test t3_userD_test",
				"accept-invite t3_userA_test t3_userB_test",
				"accept-invite t3_userB_test t3_userA_test",
				"invite t3_userA_test t3_userB_test",
				"invite t3_userA_test t3_userD_test",
				"invite t3_userB_test t3_userC_test",
				"register t3_userA_test 123",
				"accept-invite t3_userC_test t3_userB_test",
				"list-friend t3_userA_test",
				"list-friend t3_userB_test",
				"list-friend t3_userC_test",
				"post t3_userA_test Hi I am A",
				"post t3_userB_test Hi I am B",
				"post t3_userC_test Hi I am C",
				"receive-post t3_userA_test",
				"receive-post t3_userB_test",
				"receive-post t3_userC_test",
				"logout t3_userD_test",
				"delete t3_userA_test",
				"delete t3_userB_test",
				"delete t3_userC_test",
			},
			[][]string{
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"No such user or password error"},
				{"Success!"},
				{"No such user or password error"},
				{"Not login yet"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"You cannot invite yourself"},
				{"Already invited"},
				{"t3_userA_test has invited you"},
				{"t3_userD_test does not exist"},
				{"t3_userB_test did not invite you"},
				{"Success!"},
				{"t3_userB_test is already your friend"},
				{"t3_userD_test does not exist"},
				{"Success!"},
				{"t3_userA_test is already used"},
				{"Success!"},
				{"t3_userB_test"},
				{"t3_userA_test", "t3_userC_test"},
				{"t3_userB_test"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"t3_userB_test: Hi I am B"},
				{"t3_userA_test: Hi I am A", "t3_userC_test: Hi I am C"},
				{"t3_userB_test: Hi I am B"},
				{"Not login yet"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
			},
		},
		{
			"Test4",
			[]string{
				"register t4_userA_test aaaaa",
				"register t4_userA_test bbbbb",
				"login t4_userA_test aaa",
				"register t4_userB_test aaaaa",
				"register t4_userC_test aaaaa",
				"login t4_userA_test aaaaa",
				"login t4_userC_test aaaaa",
				"invite t4_userB_test t4_userA_test",
				"invite t4_userA_test t4_userA_test",
				"invite t4_userA_test t4_userD_test",
				"invite t4_userA_test t4_userB_test",
				"invite t4_userA_test t4_userB_test",
				"invite t4_userC_test t4_userB_test",
				"logout t4_userA_test",
				"list-invite t4_userB_test",
				"login t4_userB_test aaaaa",
				"list-invite t4_userB_test",
				"accept-invite t4_userB_test t4_userA_test",
				"accept-invite t4_userC_test t4_userB_test",
				"invite t4_userB_test t4_userA_test",
				"invite t4_userB_test t4_userC_test",
				"list-invite t4_userB_test",
				"list-friend t4_userB_test",
				"post t4_userB_test wwwww",
				"login t4_userA_test aaaaa",
				"receive-post t4_userA_test",
				"accept-invite t4_userB_test t4_userC_test",
				"post t4_userC_test bello",
				"post t4_userA_test wow",
				"post t4_userA_test hahaha",
				"receive-post t4_userB_test",
				"delete t4_userC_test",
				"receive-post t4_userB_test",
				"delete t4_userB_test",
				"list-friend t4_userA_test",
				"delete t4_userA_test",
			},
			[][]string{
				{"Success!"},
				{"t4_userA_test is already used"},
				{"No such user or password error"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Not login yet"},
				{"You cannot invite yourself"},
				{"t4_userD_test does not exist"},
				{"Success!"},
				{"Already invited"},
				{"Success!"},
				{"Bye!"},
				{"Not login yet"},
				{"Success!"},
				{"t4_userA_test", "t4_userC_test"},
				{"Success!"},
				{"t4_userB_test did not invite you"},
				{"t4_userA_test is already your friend"},
				{"t4_userC_test has invited you"},
				{"t4_userC_test"},
				{"t4_userA_test"},
				{"Success!"},
				{"Success!"},
				{"t4_userB_test: wwwww"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"t4_userA_test: wow", "t4_userA_test: hahaha", "t4_userC_test: bello"},
				{"Success!"},
				{"t4_userA_test: wow", "t4_userA_test: hahaha"},
				{"Success!"},
				{"No friends"},
				{"Success!"},
			},
		},
		{
			"Test5",
			[]string{
				"asdf",
				"register t5_userA_test 123",
				"register t5_userB_test 456",
				"login t5_userA_test 456",
				"register t5_userC_test 741",
				"delete t5_userA_test",
				"login t5_userA_test 123",
				"login t5_userB_test 456",
				"delete t5_userA_test",
				"delete t5_userA_test",
				"login t5_userC_test 741",
				"logout t5_userB_test",
				"logout t5_userB_test",
				"invite t5_userB_test t5_userC_test",
				"invite t5_userC_test t5_userA_test",
				"register t5_userA_test 123",
				"invite t5_userC_test t5_userA_test",
				"login t5_userA_test 123",
				"login t5_userB_test 456",
				"accept-invite t5_userA_test t5_userC_test",
				"accept-invite t5_userB_test t5_userC_test",
				"invite t5_userC_test t5_userC_test",
				"list-invite t5_userC_test",
				"list-friend t5_userC_test",
				"invite t5_userA_test t5_userB_test",
				"list-invite t5_userB_test",
				"accept-invite t5_userA_test t5_userB_test",
				"post t5_userC_test hi everyone",
				"receive-post t5_userB_test",
				"delete t5_userA_test",
				"delete t5_userB_test",
				"delete t5_userC_test",
			},
			[][]string{
				{"Unknown command asdf"},
				{"Success!"},
				{"Success!"},
				{"No such user or password error"},
				{"Success!"},
				{"Not login yet"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Not login yet"},
				{"Success!"},
				{"Bye!"},
				{"Not login yet"},
				{"Not login yet"},
				{"t5_userA_test does not exist"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"t5_userC_test did not invite you"},
				{"You cannot invite yourself"},
				{"No invitations"},
				{"t5_userA_test"},
				{"Success!"},
				{"t5_userA_test"},
				{"t5_userB_test did not invite you"},
				{"Success!"},
				{"No posts"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
			},
		},
		{
			"Test6",
			[]string{
				"register t6_userA_test",
				"login t6_userA_test",
				"register t6_userA_test aaa",
				"login t6_userA_test aaa",
				"delete t6_userA_test t6_userB_test",
				"invite t6_userA_test t6_userB_test t6_userC_test",
				"list-invite t6_userA_test aaaaaa",
				"accept-invite t6_userA_test t6_userB_test t6_userB_test t6_userC_test",
				"list-friend t6_userA_test t6_userA_test",
				"post t6_userA_test",
				"receive-post t6_userA_test t6_userB_test",
				"logout t6_userA_test aaaaa",
				"del t6_userA_test",
				"delete t6_userA_test",
			},
			[][]string{
				{"Usage: register <id> <password>"},
				{"Usage: login <id> <password>"},
				{"Success!"},
				{"Success!"},
				{"Usage: delete <user>"},
				{"Usage: invite <user> <id>"},
				{"Usage: list-invite <user>"},
				{"Usage: accept-invite <user> <id>"},
				{"Usage: list-friend <user>"},
				{"Usage: post <user> <message>"},
				{"Usage: receive-post <user>"},
				{"Usage: logout <user>"},
				{"Unknown command del"},
				{"Success!"},
			},
		},
		{
			"Exit",
			[]string{
				"register test_exit test_exit",
				"login test_exit test_exit",
				"receive-post test_exit",
			},
			[][]string{
				{"Success!"},
				{"Success!"},
				{"No posts"},
			},
		},
		{
			"Exit_cont",
			[]string{
				"receive-post test_exit",
				"login test_exit test_exit",
				"delete test_exit",
			},
			[][]string{
				{"Not login yet"},
				{"Success!"},
				{"Success!"},
			},
		},
		{
			"Multiuser",
			[]string{
				"register multi1 1",
				"register multi2 2",
				"register multi3 3",
				"register multi4 4",
				"register multi5 5",
				"register multi6 6",
				"register multi7 7",
				"register multi8 8",
				"register multi9 9",
				"register multi10 10",
				"login multi1 1",
				"login multi2 2",
				"login multi3 3",
				"login multi4 4",
				"login multi5 5",
				"login multi6 6",
				"login multi7 7",
				"login multi8 8",
				"login multi9 9",
				"login multi10 10",
				"invite multi1 multi2",
				"invite multi2 multi3",
				"invite multi3 multi4",
				"invite multi4 multi5",
				"invite multi5 multi6",
				"invite multi6 multi7",
				"invite multi7 multi8",
				"invite multi8 multi9",
				"invite multi9 multi10",
				"invite multi10 multi1",
				"accept-invite multi10 multi9",
				"accept-invite multi9 multi8",
				"accept-invite multi8 multi7",
				"accept-invite multi7 multi6",
				"accept-invite multi6 multi5",
				"accept-invite multi5 multi4",
				"accept-invite multi4 multi3",
				"accept-invite multi3 multi2",
				"accept-invite multi2 multi1",
				"accept-invite multi1 multi10",
				"list-friend multi1",
				"list-friend multi2",
				"list-friend multi3",
				"list-friend multi4",
				"list-friend multi5",
				"list-friend multi6",
				"list-friend multi7",
				"list-friend multi8",
				"list-friend multi9",
				"list-friend multi10",
				"delete multi1",
				"delete multi2",
				"delete multi3",
				"delete multi4",
				"delete multi5",
				"delete multi6",
				"delete multi7",
				"delete multi8",
				"delete multi9",
				"delete multi10",
			},
			[][]string{
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"multi2", "multi10"},
				{"multi3", "multi1"},
				{"multi4", "multi2"},
				{"multi5", "multi3"},
				{"multi6", "multi4"},
				{"multi7", "multi5"},
				{"multi8", "multi6"},
				{"multi9", "multi7"},
				{"multi10", "multi8"},
				{"multi1", "multi9"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
				{"Success!"},
			},
		},
	}
	db, err := sql.Open("mysql", "admin:test@/nphw3")
	if err != nil {
		t.Error("Could not open database: ", err)
	}
	defer db.Close()
	err = SetAddr("127.0.0.1", "2222")
	if err != nil {
		t.Error("Could not set address: ", err)
	}
	err = CreateTables(db)
	if err != nil {
		t.Error("Could not create tables: ", err)
	}
	go Run(db)
	time.Sleep(time.Second)

	for _, tc := range testlist {
		t.Run(tc.testName, func(t *testing.T) {
			// Act
			client, err := ssc.NewTCPClient("127.0.0.1", "2222")
			if err != nil {
				t.Error("Could not create client: ", err)
			}

			// Assert
			for i := range tc.wantlist {
				response := client.Execute(tc.testlist[i])
				out := strings.Split(response, "\n")
				want := tc.wantlist[i]
				sort.Strings(out)
				sort.Strings(want)
				for j := range want {
					if out[j] != want[j] {
						t.Errorf("response did match expected output: %d\nExpect:%s\nReal:%s\n", i, want[j], out[j])
					}
				}
			}
		})
	}
}
